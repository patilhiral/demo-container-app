name: Build application and Push to ACR

on:
  push:
    branches:
      - main

env:
  REGISTRY_NAME: ${{ secrets.AZURE_ACR_LOGIN_SERVER}}
  IMAGE_NAME: containerdemoapp

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0" # Change to match your version

      - name: Log in to Azure using service principal
        run: |
          az login --service-principal \
            --username ${{ secrets.AZURE_CLIENT_ID }} \
            --password ${{ secrets.AZURE_CLIENT_SECRET }} \
            --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure Container Registry Login
        run: |
          az acr login --name ${{ env.REGISTRY_NAME }}

      - name: Extract latest image version
        id: get-version
        run: |
          VERSION=$(az acr repository show-tags --name $REGISTRY_NAME --repository $IMAGE_NAME --orderby time_desc --top 1 --output tsv 2>/dev/null || echo "v1.0.0")
          echo "Latest tag: $VERSION"
          BASE_VERSION=${VERSION#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$BASE_VERSION"
          PATCH=$((PATCH + 1))
          NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t $REGISTRY_NAME/$IMAGE_NAME:${{ steps.get-version.outputs.version }} -f Application/slndemoapp/demoapp/Dockerfile .

      - name: Push image to ACR
        run: |
          docker push $REGISTRY_NAME/$IMAGE_NAME:${{ steps.get-version.outputs.version }}
